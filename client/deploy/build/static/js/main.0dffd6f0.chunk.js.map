{"version":3,"sources":["components/Header.js","components/TodoList.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TodoList","todos","map","todo","name","date","id","Todo","useState","value","setValue","todoresult","setToDoResult","setToDos","useEffect","fetch","then","data","json","result","url","placeholder","type","onBlur","event","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAKeA,MAHf,WACE,OAAO,qBAAKC,UAAW,SAAhB,SAA2B,c,mBCsBrBC,MAvBf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,qBAAKF,UAAW,YAAhB,SACE,gCACE,kCACE,+BACE,6BAAK,SACL,6BAAK,YAENE,GACCA,EAAMC,KAAI,SAAAC,GAAI,OACZ,+BACE,6BAAKA,EAAKC,OAEV,6BAAKD,EAAKE,SAHHF,EAAKG,eCwCbC,MAlDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOP,EAAP,KAAcY,EAAd,KA+BA,OAxBAC,qBAAU,WAGRC,MADE,2EAECC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACAA,EAAOlB,OACTY,EAASM,EAAOlB,YAGrB,CAACU,IAGJG,qBAAU,WACR,GAAc,KAAVL,EAAc,CAChB,IAAIW,EAAG,sFAAkFX,GACzFM,MAAMK,GACHJ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACJP,EAAcO,SAGnB,CAACV,IAGF,gCACE,sBAAKV,UAAW,eAAhB,UACE,mBAAGA,UAAW,aAAd,SAA6B,8BAE7B,uBACEsB,YAAa,oBACbtB,UAAW,aACXuB,KAAM,OACNC,OAtCR,SAAqBC,GACnBd,EAASc,EAAMC,OAAOhB,aAwCpB,cAAC,EAAD,CAAUR,MAAOA,QCpCRyB,MATf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0dffd6f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <div className={\"Header\"}>{\"ToDo App\"}</div>;\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/todolist.css\";\r\nfunction TodoList({ todos }) {\r\n  return (\r\n    <div className={\"todo-list\"}>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>{\"Name\"}</th>\r\n            <th>{\"Date\"}</th>\r\n          </tr>\r\n          {todos &&\r\n            todos.map(todo => (\r\n              <tr key={todo.id}>\r\n                <td>{todo.name}</td>\r\n\r\n                <td>{todo.date}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/todo.css\";\r\nimport TodoList from \"./TodoList\";\r\nfunction Todo() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [todoresult, setToDoResult] = useState(\"\");\r\n  const [todos, setToDos] = useState([]);\r\n\r\n  function onBluChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  //call all todos\r\n  useEffect(() => {\r\n    let url =\r\n      \"https://todo-backend-dot-ingka-salja-web-dev.ew.r.appspot.com/api/todos\";\r\n    fetch(url)\r\n      .then(data => data.json())\r\n      .then(result => {\r\n        if (result.todos) {\r\n          setToDos(result.todos);\r\n        }\r\n      });\r\n  }, [todoresult]);\r\n\r\n  //adds a todo\r\n  useEffect(() => {\r\n    if (value !== \"\") {\r\n      let url = `https://todo-backend-dot-ingka-salja-web-dev.ew.r.appspot.com/api/todo?text=${value}`;\r\n      fetch(url)\r\n        .then(data => data.json())\r\n        .then(result => {\r\n          setToDoResult(result);\r\n        });\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"todo-section\"}>\r\n        <p className={\"todo-title\"}>{\"Please enter todays tasks\"}</p>\r\n\r\n        <input\r\n          placeholder={\"enter a task name\"}\r\n          className={\"todo-input\"}\r\n          type={\"text\"}\r\n          onBlur={onBluChange}\r\n        ></input>\r\n      </div>\r\n      <TodoList todos={todos}></TodoList>\r\n    </div>\r\n  );\r\n}\r\nexport default Todo;\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Todo from \"./components/Todo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <Todo></Todo>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}